diff --git "a/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/TCNWorckRrecord.json" "b/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/TCNWorckRrecord.json"
index d55f2098b..4cd78ef29 100644
--- "a/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/TCNWorckRrecord.json"
+++ "b/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/TCNWorckRrecord.json"
@@ -1 +1 @@
-{"class": "Recorder", "id": "edf0b5c97b674628b5e8622d03961725", "name": "mlflow_recorder", "experiment_id": "1", "start_time": "2023-04-07 10:23:53", "end_time": null, "status": "RUNNING"}
\ No newline at end of file
+{"class": "Recorder", "id": "bb197c15e2dc4b02a0d17e7f583eafbf", "name": "mlflow_recorder", "experiment_id": "1", "start_time": "2023-04-08 21:48:41", "end_time": null, "status": "RUNNING"}
\ No newline at end of file
diff --git "a/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/tcn_wf.py" "b/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/tcn_wf.py"
index e3ff8ee8e..cda458073 100644
--- "a/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/tcn_wf.py"
+++ "b/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/tcn_wf.py"
@@ -92,11 +92,21 @@ def get_dataset_config(
 
 ################################### MODEL CONFIG ###################################
 
-transformer_ts_config: Dict = {
-    "class": "TransformerModel",
-    "module_path": "qlib.contrib.model.pytorch_transformer_ts",
-    "kwargs": {"seed": 42, "n_jobs": 20},
-}
+def get_transformer_config(
+    d_feat: int, seed: int = 42, n_jobs: int = 20, method: str = "ts"
+) -> Dict:
+    if method == "ts":
+        return {
+            "class": "TransformerModel",
+            "module_path": "qlib.contrib.model.pytorch_transformer_ts",
+            "kwargs": {"seed": seed, "n_jobs": n_jobs},
+        }
+    else:
+        return {
+            "class": "TransformerModel",
+            "module_path": "qlib.contrib.model.pytorch_transformer",
+            "kwargs": {"d_feat": d_feat, 'seed': seed},
+        }
 
 
 def get_alstm_ts_config(
@@ -251,8 +261,6 @@ task: Dict = {
 
 
 
-
-
 if __name__ == "__main__":
 
     qlib.init(
@@ -274,9 +282,9 @@ if __name__ == "__main__":
         ],
     )
 
-    if (CURRENT_DIR / "factor_data" / "chip_ts_dataset.pkl").exists:
+    if (CURRENT_DIR / "factor_data" / "turnovercoeff_dataset.pkl").exists:
         console.log("数据集已存在，开始读取...")
-        with open(CURRENT_DIR / "factor_data" / "chip_ts_dataset.pkl", "rb") as f:
+        with open(CURRENT_DIR / "factor_data" / "turnovercoeff_dataset.pkl", "rb") as f:
             dataset = pickle.load(f)
 
     else:
@@ -285,13 +293,13 @@ if __name__ == "__main__":
         console.log("开始储存数据集...")
         # 保存数据方便后续使用
         dataset.config(dump_all=True, recursive=True)
-        dataset.to_pickle(path="chip_ts_dataset.pkl", dump_all=True)
+        dataset.to_pickle(path="turnovercoeff_dataset.pkl", dump_all=True)
         console.log("数据集储存完毕！")
 
     console.log("初始化模型...")
     # 实例化模型对象
-    model = init_instance_by_config(task["model"])
-
+    # model = init_instance_by_config(task["model"])
+    model = init_instance_by_config(get_transformer_config(d_feat=4,method='normal'))
     # 回测参数配置
     port_analysis_config = {
         "executor": {
diff --git "a/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/tmp.pth" "b/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/tmp.pth"
index a6f885035..1a7c50a74 100644
Binary files "a/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/tmp.pth" and "b/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/tmp.pth" differ
diff --git "a/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/\347\255\271\347\240\201\345\210\206\345\270\203\345\233\240\345\255\220\346\261\207\346\200\273.ipynb" "b/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/\347\255\271\347\240\201\345\210\206\345\270\203\345\233\240\345\255\220\346\261\207\346\200\273.ipynb"
index 0bdc1fd3f..fbdfa2610 100644
--- "a/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/\347\255\271\347\240\201\345\210\206\345\270\203\345\233\240\345\255\220\346\261\207\346\200\273.ipynb"
+++ "b/sqlalchemy_to_data/\346\265\213\350\257\225\347\233\270\345\205\263/\347\255\271\347\240\201\345\210\206\345\270\203\347\256\227\346\263\225/\347\255\271\347\240\201\345\210\206\345\270\203\345\233\240\345\255\220\346\261\207\346\200\273.ipynb"
@@ -2,7 +2,7 @@
  "cells": [
   {
    "cell_type": "code",
-   "execution_count": 1,
+   "execution_count": 17,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -30,16 +30,16 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 2,
+   "execution_count": 18,
    "metadata": {},
    "outputs": [
     {
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "[57440:MainThread](2023-04-08 11:30:14,910) INFO - qlib.Initialization - [config.py:416] - default_conf: client.\n",
-      "[57440:MainThread](2023-04-08 11:30:14,912) INFO - qlib.Initialization - [__init__.py:74] - qlib successfully initialized based on client settings.\n",
-      "[57440:MainThread](2023-04-08 11:30:14,913) INFO - qlib.Initialization - [__init__.py:76] - data_path={'__DEFAULT_FREQ': WindowsPath('D:/WorkSpace/visualization_stock_market/sqlalchemy_to_data/测试相关/筹码分布算法/qlib_data')}\n"
+      "[57440:MainThread](2023-04-08 21:58:29,712) INFO - qlib.Initialization - [config.py:416] - default_conf: client.\n",
+      "[57440:MainThread](2023-04-08 21:58:29,714) INFO - qlib.Initialization - [__init__.py:74] - qlib successfully initialized based on client settings.\n",
+      "[57440:MainThread](2023-04-08 21:58:29,715) INFO - qlib.Initialization - [__init__.py:76] - data_path={'__DEFAULT_FREQ': WindowsPath('D:/WorkSpace/visualization_stock_market/sqlalchemy_to_data/测试相关/筹码分布算法/qlib_data')}\n"
      ]
     }
    ],
